/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
test {
  systemProperty "java.library.path", "${rootDir}/target/debug"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat "full"
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}
task buildRust(type: Exec) {
  commandLine 'cargo', 'build'
}
task javah(type:Exec) {
  def classpath = "build/classes/java/main"
  def className;
  if(project.hasProperty('fullClassName')) {
    className = project.getProperty('fullClassName')
  } else if(project.hasProperty('className')) {
    className = "com.sample.jni." + project.getProperty('className')
  } else {
    className = "com.sample.jni.Library"
  }
  commandLine 'javah', '-classpath', classpath, className
  dependsOn classes
}
processTestResources.dependsOn(buildRust)