{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50],"program":"/home/yoga07/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","jni","/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"backtrace\"","--cfg","feature=\"default\"","--cfg","feature=\"error-chain\"","-C","metadata=68e98591e54704c1","-C","extra-filename=-68e98591e54704c1","--out-dir","/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps","-L","dependency=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps","--extern","cesu8=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps/libcesu8-5ac11867cb2a2aa3.rmeta","--extern","combine=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps/libcombine-4cde876699b1118c.rmeta","--extern","error_chain=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps/liberror_chain-084b0a4d0b5f7e7d.rmeta","--extern","jni_sys=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps/libjni_sys-5894f805218beb5f.rmeta","--extern","log=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/deps/liblog-2a98166d398874c9.rmeta","--cap-lints","allow","-L","native=/home/yoga07/rust/java-jni-rust/callbacks/target/rls/debug/build/backtrace-sys-3ef5ab238b4038dd/out","--error-format=json","--sysroot","/home/yoga07/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,121,111,103,97,48,55,47,114,117,115,116,47,106,97,118,97,45,106,110,105,45,114,117,115,116,47,99,97,108,108,98,97,99,107,115,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,106,110,105,45,54,56,101,57,56,53,57,49,101,53,52,55,48,52,99,49,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"jni","disambiguator":[12451640455554038300,2520961862443236173]},"crate_root":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src","external_crates":[{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[979479788000265534,9141292658489445095]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17451955640407700502,6971800510361814305]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2083467225274134199,7228188070218301790]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16424709386109849190,9039783948086597474]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4850785567157362838,18339346294835630653]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2645317816189714133,576468469961037472]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[7428202218068478931,6308794436075870107]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[3426372306328932064,11228271822275729788]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[7311135129655779416,6337386015174947236]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":10,"id":{"name":"jni_sys","disambiguator":[10242463873569619446,15931407908618073407]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":11,"id":{"name":"log","disambiguator":[14123848001302886627,6710924087521732105]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[12702354992538344999,12555564504581376130]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":13,"id":{"name":"error_chain","disambiguator":[8604531924573159629,2261424914533764713]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":14,"id":{"name":"backtrace","disambiguator":[5040587593938248967,17615917857746231617]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[16203946953353028487,2747886665457059784]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[10971829512900209447,2340642280850784323]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":17,"id":{"name":"backtrace_sys","disambiguator":[9004229625690546519,16533375351405535358]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":18,"id":{"name":"combine","disambiguator":[1369159419008350968,11029005356129685625]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[14876371435628184694,14059279614733657053]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":20,"id":{"name":"either","disambiguator":[10177809453776734520,2560774749002889687]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":21,"id":{"name":"memchr","disambiguator":[2888517237056698358,10836676383548423382]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":22,"id":{"name":"unreachable","disambiguator":[8877991899753768286,78899650716069114]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":23,"id":{"name":"void","disambiguator":[16085219164383457043,8547057365711807733]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":24,"id":{"name":"ascii","disambiguator":[4863405184307457624,13629212449394390480]}},{"file_name":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","num":25,"id":{"name":"cesu8","disambiguator":[17504141903625926111,18087234562105153410]}}],"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8584,"line_start":1,"line_end":235,"column_start":1,"column_end":20}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,115,121,115,46,114,115],"byte_start":8603,"byte_end":8604,"line_start":1,"line_end":1,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"jdouble, jchar, jclass, JNI_VERSION_1_8, JNI_VERSION_1_2, jlongArray, jdoubleArray, jbooleanArray, jint, JNI_TRUE, JNIEnv, jboolean, jshort, JavaVM, jstring, JNI_EDETACHED, jobject, jobjectArray, JNI_VERSION_1_4, jfloatArray, jbyteArray, jarray, jfloat, jlong, jbyte, jfieldID, jthrowable, JNI_OK, jshortArray, JNI_VERSION_1_6, jintArray, JNI_VERSION_1_1, jvalue, jcharArray, jmethodID, jsize","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":16405,"byte_end":16406,"line_start":2,"line_end":2,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Desc","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":16451,"byte_end":16452,"line_start":5,"line_end":5,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":16499,"byte_end":16500,"line_start":8,"line_end":8,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":16545,"byte_end":16546,"line_start":11,"line_end":11,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":16599,"byte_end":16600,"line_start":14,"line_end":14,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":27864,"byte_end":27865,"line_start":3,"line_end":3,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"JValue","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":27908,"byte_end":27909,"line_start":6,"line_end":6,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JMethodID","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":27964,"byte_end":27965,"line_start":9,"line_end":9,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"JStaticMethodID","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28006,"byte_end":28007,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"JFieldID","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28060,"byte_end":28061,"line_start":15,"line_end":15,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"JStaticFieldID","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28100,"byte_end":28101,"line_start":18,"line_end":18,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"JObject","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28146,"byte_end":28147,"line_start":21,"line_end":21,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"JThrowable","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28184,"byte_end":28185,"line_start":24,"line_end":24,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"JClass","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28224,"byte_end":28225,"line_start":27,"line_end":27,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"JString","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28258,"byte_end":28259,"line_start":30,"line_end":30,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"JMap","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28294,"byte_end":28295,"line_start":33,"line_end":33,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"JList","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28342,"byte_end":28343,"line_start":36,"line_end":36,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"JByteBuffer","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28432,"byte_end":28433,"line_start":40,"line_end":40,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"GlobalRef","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":28514,"byte_end":28515,"line_start":44,"line_end":44,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"AutoLocal","parent":{"krate":0,"index":284}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,109,111,100,46,114,115],"byte_start":61358,"byte_end":61359,"line_start":3,"line_end":3,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"JNIString, JNIStr","parent":{"krate":0,"index":756}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,109,111,100,46,114,115],"byte_start":61400,"byte_end":61401,"line_start":6,"line_end":6,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"JavaStr","parent":{"krate":0,"index":756}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8582,"byte_end":8583,"line_start":235,"line_end":235,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"objects, errors, JNIVersion, strings, descriptors, JNIEnv, signature, JavaVM","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8584,"line_start":1,"line_end":235,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":1218}],"decl_id":null,"docs":" # Safe JNI Bindings in Rust","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,115,121,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sys","qualname":"::sys","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/sys.rs","parent":null,"children":[{"krate":0,"index":10}],"decl_id":null,"docs":" `jni-sys` re-exports\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8862,"byte_end":8864,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"V1","qualname":"::wrapper::version::JNIVersion::V1","value":"JNIVersion::V1","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8870,"byte_end":8872,"line_start":10,"line_end":10,"column_start":5,"column_end":7},"name":"V2","qualname":"::wrapper::version::JNIVersion::V2","value":"JNIVersion::V2","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8878,"byte_end":8880,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"V4","qualname":"::wrapper::version::JNIVersion::V4","value":"JNIVersion::V4","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8886,"byte_end":8888,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"V6","qualname":"::wrapper::version::JNIVersion::V6","value":"JNIVersion::V6","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8894,"byte_end":8896,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"V8","qualname":"::wrapper::version::JNIVersion::V8","value":"JNIVersion::V8","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8902,"byte_end":8909,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::wrapper::version::JNIVersion::Invalid","value":"JNIVersion::Invalid(i32)","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1220},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8845,"byte_end":8855,"line_start":8,"line_end":8,"column_start":10,"column_end":20},"name":"JNIVersion","qualname":"::wrapper::version::JNIVersion","value":"JNIVersion::{V1, V2, V4, V6, V8, Invalid}","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569}],"decl_id":null,"docs":" JNI Version","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8813,"byte_end":8835,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8836,"byte_end":8917,"line_start":8,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::wrapper::errors","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/wrapper/errors.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1234},{"krate":0,"index":1252},{"krate":0,"index":1270},{"krate":0,"index":1276},{"krate":0,"index":1280},{"krate":0,"index":1284},{"krate":0,"index":1288},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1330},{"krate":0,"index":1334},{"krate":0,"index":1292},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1304},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1232},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84}],"decl_id":null,"docs":" Errors. Do you really need more explanation?\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":13542,"byte_end":13565,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":15992,"byte_end":16016,"line_start":75,"line_end":75,"column_start":8,"column_end":32},"name":"jni_error_code_to_result","qualname":"::wrapper::errors::jni_error_code_to_result","value":"fn (code: sys::jint) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":16248,"byte_end":16257,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"Exception","qualname":"::wrapper::errors::Exception","value":"Exception { class, msg }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":16268,"byte_end":16273,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"class","qualname":"::wrapper::errors::Exception::class","value":"std::string::String","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":16291,"byte_end":16294,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"msg","qualname":"::wrapper::errors::Exception::msg","value":"std::string::String","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":16317,"byte_end":16328,"line_start":88,"line_end":88,"column_start":11,"column_end":22},"name":"ToException","qualname":"::wrapper::errors::ToException","value":"ToException","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":16338,"byte_end":16350,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"to_exception","qualname":"::wrapper::errors::ToException::to_exception","value":"fn (&self) -> Exception","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"descriptors","qualname":"::wrapper::descriptors","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/wrapper/descriptors/mod.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":240}],"decl_id":null,"docs":" Descriptors for classes and method IDs.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,100,101,115,99,46,114,115],"byte_start":16999,"byte_end":17003,"line_start":9,"line_end":9,"column_start":11,"column_end":15},"name":"Desc","qualname":"::wrapper::descriptors::desc::Desc","value":"Desc<'a, T>","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" Trait for things that can be looked up through the JNI via a descriptor.\n This will be something like the fully-qualified class name\n `java/lang/String` or a tuple containing a class descriptor, method name,\n and method signature. For convenience, this is also implemented for the\n concrete types themselves in addition to their descriptors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,100,101,115,99,46,114,115],"byte_start":17068,"byte_end":17074,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"lookup","qualname":"::wrapper::descriptors::desc::Desc::lookup","value":"fn (self, &JNIEnv<'a>) -> Result<T>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Look up the concrete type from the JVM.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":242},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signature","qualname":"::wrapper::signature","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/wrapper/signature.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":1338},{"krate":0,"index":1354},{"krate":0,"index":1350},{"krate":0,"index":1346},{"krate":0,"index":1342},{"krate":0,"index":1340},{"krate":0,"index":250},{"krate":0,"index":1358},{"krate":0,"index":1374},{"krate":0,"index":1368},{"krate":0,"index":1364},{"krate":0,"index":1360},{"krate":0,"index":254},{"krate":0,"index":258},{"krate":0,"index":1378},{"krate":0,"index":1394},{"krate":0,"index":1388},{"krate":0,"index":1384},{"krate":0,"index":1380},{"krate":0,"index":262},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282}],"decl_id":null,"docs":" Parser for java type signatures.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21382,"byte_end":21389,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::wrapper::signature::Primitive::Boolean","value":"Primitive::Boolean","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":711},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21400,"byte_end":21404,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Byte","qualname":"::wrapper::signature::Primitive::Byte","value":"Primitive::Byte","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":713},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21418,"byte_end":21422,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Char","qualname":"::wrapper::signature::Primitive::Char","value":"Primitive::Char","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21436,"byte_end":21442,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Double","qualname":"::wrapper::signature::Primitive::Double","value":"Primitive::Double","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":717},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21454,"byte_end":21459,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Float","qualname":"::wrapper::signature::Primitive::Float","value":"Primitive::Float","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21472,"byte_end":21475,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Int","qualname":"::wrapper::signature::Primitive::Int","value":"Primitive::Int","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21490,"byte_end":21494,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Long","qualname":"::wrapper::signature::Primitive::Long","value":"Primitive::Long","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":723},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21508,"byte_end":21513,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Short","qualname":"::wrapper::signature::Primitive::Short","value":"Primitive::Short","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":725},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21526,"byte_end":21530,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Void","qualname":"::wrapper::signature::Primitive::Void","value":"Primitive::Void","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1338},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21366,"byte_end":21375,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::wrapper::signature::Primitive","value":"Primitive::{Boolean, Byte, Char, Double, Float, Int, Long, Short, Void}","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725}],"decl_id":null,"docs":" A primitive java type. These are the things that can be represented without\n an object.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21289,"byte_end":21311,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21357,"byte_end":21541,"line_start":9,"line_end":19,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21357,"byte_end":21541,"line_start":9,"line_end":19,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22283,"byte_end":22292,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"name":"Primitive","qualname":"::wrapper::signature::JavaType::Primitive","value":"JavaType::Primitive(Primitive)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":731},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22309,"byte_end":22315,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Object","qualname":"::wrapper::signature::JavaType::Object","value":"JavaType::Object(String)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":735},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22329,"byte_end":22334,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Array","qualname":"::wrapper::signature::JavaType::Array","value":"JavaType::Array(Box<JavaType>)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22355,"byte_end":22361,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Method","qualname":"::wrapper::signature::JavaType::Method","value":"JavaType::Method(Box<TypeSignature>)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1358},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22268,"byte_end":22276,"line_start":40,"line_end":40,"column_start":10,"column_end":18},"name":"JavaType","qualname":"::wrapper::signature::JavaType","value":"JavaType::{Primitive, Object, Array, Method}","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":739}],"decl_id":null,"docs":" Enum representing any java type in addition to method signatures.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22197,"byte_end":22219,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22259,"byte_end":22384,"line_start":40,"line_end":45,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22463,"byte_end":22471,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"from_str","qualname":"<JavaType>::from_str","value":"fn (s: &str) -> Result<JavaType>","parent":null,"children":[],"decl_id":null,"docs":" Parse a type string into a JavaType enum.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1378},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23387,"byte_end":23400,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"TypeSignature","qualname":"::wrapper::signature::TypeSignature","value":"TypeSignature { args, ret }","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":745}],"decl_id":null,"docs":" A method type signature. This is the structure representation of something\n like `(Ljava/lang/String;)Z`. Used by the `call_(object|static)_method`\n functions on jnienv to ensure safety.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23314,"byte_end":23336,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23376,"byte_end":23456,"line_start":75,"line_end":78,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":743},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23411,"byte_end":23415,"line_start":76,"line_end":76,"column_start":9,"column_end":13},"name":"args","qualname":"::wrapper::signature::TypeSignature::args","value":"std::vec::Vec<wrapper::signature::JavaType>","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":745},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23440,"byte_end":23443,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"ret","qualname":"::wrapper::signature::TypeSignature::ret","value":"wrapper::signature::JavaType","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23550,"byte_end":23558,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"from_str","qualname":"<TypeSignature>::from_str","value":"fn <S> (s: S) -> Result<TypeSignature>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature string into a TypeSignature enum.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"objects","qualname":"::wrapper::objects","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/wrapper/objects/mod.rs","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":754}],"decl_id":null,"docs":" Wrappers for object pointers returned from the JVM.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":749},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28799,"byte_end":28805,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Object","qualname":"::wrapper::objects::jvalue::JValue::Object","value":"JValue::Object(JObject<'a>)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":753},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28824,"byte_end":28828,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Byte","qualname":"::wrapper::objects::jvalue::JValue::Byte","value":"JValue::Byte(jbyte)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28841,"byte_end":28845,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Char","qualname":"::wrapper::objects::jvalue::JValue::Char","value":"JValue::Char(jchar)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28858,"byte_end":28863,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Short","qualname":"::wrapper::objects::jvalue::JValue::Short","value":"JValue::Short(jshort)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28877,"byte_end":28880,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Int","qualname":"::wrapper::objects::jvalue::JValue::Int","value":"JValue::Int(jint)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28892,"byte_end":28896,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Long","qualname":"::wrapper::objects::jvalue::JValue::Long","value":"JValue::Long(jlong)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":773},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28909,"byte_end":28913,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Bool","qualname":"::wrapper::objects::jvalue::JValue::Bool","value":"JValue::Bool(jboolean)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28929,"byte_end":28934,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Float","qualname":"::wrapper::objects::jvalue::JValue::Float","value":"JValue::Float(jfloat)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28948,"byte_end":28954,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Double","qualname":"::wrapper::objects::jvalue::JValue::Double","value":"JValue::Double(jdouble)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28969,"byte_end":28973,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Void","qualname":"::wrapper::objects::jvalue::JValue::Void","value":"JValue::Void","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1398},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28782,"byte_end":28788,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"JValue","qualname":"::wrapper::objects::jvalue::JValue","value":"JValue::{Object, Byte, Char, Short, Int, Long, Bool, Float, Double, Void}","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":785}],"decl_id":null,"docs":" Rusty version of the JNI C `jvalue` enum. Used in Java method call arguments\n and returns.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28720,"byte_end":28742,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":28773,"byte_end":28976,"line_start":14,"line_end":25,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":29180,"byte_end":29186,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"to_jni","qualname":"<JValue<'a>>::to_jni","value":"fn (self) -> jvalue","parent":null,"children":[],"decl_id":null,"docs":" Convert the enum to its jni-compatible equivalent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":30110,"byte_end":30119,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"type_name","qualname":"<JValue<'a>>::type_name","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the type name for the enum variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":30709,"byte_end":30723,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"primitive_type","qualname":"<JValue<'a>>::primitive_type","value":"fn (&self) -> Option<Primitive>","parent":null,"children":[],"decl_id":null,"docs":" Get the primitive type for the enum variant. If it's not a primitive\n (i.e. an Object), returns None.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":31330,"byte_end":31331,"line_start":92,"line_end":92,"column_start":12,"column_end":13},"name":"l","qualname":"<JValue<'a>>::l","value":"fn (self) -> Result<JObject<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to an Object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":31577,"byte_end":31578,"line_start":100,"line_end":100,"column_start":12,"column_end":13},"name":"z","qualname":"<JValue<'a>>::z","value":"fn (self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a boolean.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":31811,"byte_end":31812,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"b","qualname":"<JValue<'a>>::b","value":"fn (self) -> Result<jbyte>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a byte.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":32042,"byte_end":32043,"line_start":116,"line_end":116,"column_start":12,"column_end":13},"name":"c","qualname":"<JValue<'a>>::c","value":"fn (self) -> Result<jchar>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a char.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":32275,"byte_end":32276,"line_start":124,"line_end":124,"column_start":12,"column_end":13},"name":"d","qualname":"<JValue<'a>>::d","value":"fn (self) -> Result<jdouble>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a double.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":32513,"byte_end":32514,"line_start":132,"line_end":132,"column_start":12,"column_end":13},"name":"f","qualname":"<JValue<'a>>::f","value":"fn (self) -> Result<jfloat>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a float.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":32747,"byte_end":32748,"line_start":140,"line_end":140,"column_start":12,"column_end":13},"name":"i","qualname":"<JValue<'a>>::i","value":"fn (self) -> Result<jint>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to an int.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":32975,"byte_end":32976,"line_start":148,"line_end":148,"column_start":12,"column_end":13},"name":"j","qualname":"<JValue<'a>>::j","value":"fn (self) -> Result<jlong>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a long.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33207,"byte_end":33208,"line_start":156,"line_end":156,"column_start":12,"column_end":13},"name":"s","qualname":"<JValue<'a>>::s","value":"fn (self) -> Result<jshort>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a short.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33441,"byte_end":33442,"line_start":164,"line_end":164,"column_start":12,"column_end":13},"name":"v","qualname":"<JValue<'a>>::v","value":"fn (self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to unwrap to a void.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35265,"byte_end":35274,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"JMethodID","qualname":"::wrapper::objects::jmethodid::JMethodID","value":"JMethodID {  }","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":797}],"decl_id":null,"docs":" Wrapper around `sys::jmethodid` that adds a lifetime. This prevents it from\n outliving the context in which it was acquired and getting GC'd out from\n under us. It matches C's representation of the raw pointer, so it can be\n used in any of the extern function argument positions that would take a\n `jmethodid`.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35213,"byte_end":35223,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35254,"byte_end":35342,"line_start":12,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35609,"byte_end":35619,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<JMethodID<'a>>::into_inner","value":"fn (self) -> jmethodID","parent":null,"children":[],"decl_id":null,"docs":" Unwrap to the internal jni type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36191,"byte_end":36206,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"JStaticMethodID","qualname":"::wrapper::objects::jstaticmethodid::JStaticMethodID","value":"JStaticMethodID {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":809}],"decl_id":null,"docs":" Wrapper around `sys::jmethodid` that adds a lifetime. This prevents it from\n outliving the context in which it was acquired and getting GC'd out from\n under us. It matches C's representation of the raw pointer, so it can be\n used in any of the extern function argument positions that would take a\n `jmethodid`. This represents static methods only since they require a\n different set of JNI signatures.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36146,"byte_end":36156,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36180,"byte_end":36274,"line_start":14,"line_end":17,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36559,"byte_end":36569,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<JStaticMethodID<'a>>::into_inner","value":"fn (self) -> jmethodID","parent":null,"children":[],"decl_id":null,"docs":" Unwrap to the internal jni type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1430},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37043,"byte_end":37051,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"JFieldID","qualname":"::wrapper::objects::jfieldid::JFieldID","value":"JFieldID {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":819}],"decl_id":null,"docs":" Wrapper around `sys::jfieldid` that adds a lifetime. This prevents it from\n outliving the context in which it was acquired and getting GC'd out from\n under us. It matches C's representation of the raw pointer, so it can be\n used in any of the extern function argument positions that would take a\n `jfieldid`.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":36998,"byte_end":37008,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37032,"byte_end":37118,"line_start":12,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37380,"byte_end":37390,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<JFieldID<'a>>::into_inner","value":"fn (self) -> jfieldID","parent":null,"children":[],"decl_id":null,"docs":" Unwrap to the internal jni type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":37875,"byte_end":37889,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"JStaticFieldID","qualname":"::wrapper::objects::jstaticfieldid::JStaticFieldID","value":"JStaticFieldID {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":829}],"decl_id":null,"docs":" Wrapper around `sys::jstaticfieldid` that adds a lifetime. This prevents it\n from outliving the context in which it was acquired and getting GC'd out\n from under us. It matches C's representation of the raw pointer, so it can\n be used in any of the extern function argument positions that would take a\n `jstaticfieldid`.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":37830,"byte_end":37840,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":37864,"byte_end":37956,"line_start":12,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":38236,"byte_end":38246,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<JStaticFieldID<'a>>::into_inner","value":"fn (self) -> jfieldID","parent":null,"children":[],"decl_id":null,"docs":" Unwrap to the internal jni type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":38827,"byte_end":38834,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"JObject","qualname":"::wrapper::objects::jobject::JObject","value":"JObject {  }","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":839}],"decl_id":null,"docs":" Wrapper around `sys::jobject` that adds a lifetime. This prevents it from\n outliving the context in which it was acquired and getting GC'd out from\n under us. It matches C's representation of the raw pointer, so it can be\n used in any of the extern function argument positions that would take a\n `jobject`.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":38775,"byte_end":38785,"line_start":13,"line_end":13,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":38816,"byte_end":38900,"line_start":15,"line_end":18,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39301,"byte_end":39311,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<JObject<'a>>::into_inner","value":"fn (self) -> jobject","parent":null,"children":[],"decl_id":null,"docs":" Unwrap to the internal jni type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39405,"byte_end":39409,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"null","qualname":"<JObject<'a>>::null","value":"fn () -> JObject<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new null object\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39672,"byte_end":39682,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"JThrowable","qualname":"::wrapper::objects::jthrowable::JThrowable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lifetime'd representation of a `jthrowable`. Just a `JObject` wrapped in a\n new class.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39650,"byte_end":39660,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1458},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40465,"byte_end":40471,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"JClass","qualname":"::wrapper::objects::jclass::JClass","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lifetime'd representation of a `jclass`. Just a `JObject` wrapped in a new\n class.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40413,"byte_end":40423,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40454,"byte_end":40489,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1470},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41288,"byte_end":41295,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"JString","qualname":"::wrapper::objects::jstring::JString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lifetime'd representation of a `jstring`. Just a `JObject` wrapped in a new\n class.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41243,"byte_end":41253,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41277,"byte_end":41313,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42240,"byte_end":42244,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"JMap","qualname":"::wrapper::objects::jmap::JMap","value":"JMap {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" Wrapper for JObjects that implement `java/util/Map`. Provides methods to get\n and set entries and a way to iterate over key/value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42911,"byte_end":42919,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"from_env","qualname":"<JMap<'a>>::from_env","value":"fn (env: &'a JNIEnv<'a>, obj: JObject<'a>) -> Result<JMap<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Create a map from the environment and an object. This looks up the\n necessary class and method ids to call all of the methods on it so that\n exra work doesn't need to be done on every method call.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":43722,"byte_end":43725,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"get","qualname":"<JMap<'a>>::get","value":"fn (&self, key: JObject<'a>) -> Result<Option<JObject>>","parent":null,"children":[],"decl_id":null,"docs":" Look up the value for a key. Returns `Some` if it's found and `None` if\n a null pointer would be returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":44391,"byte_end":44394,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"put","qualname":"<JMap<'a>>::put","value":"fn (&self, key: JObject<'a>, value: JObject<'a>) -> Result<Option<JObject>>","parent":null,"children":[],"decl_id":null,"docs":" Look up the value for a key. Returns `Some` with the old value if the\n key already existed and `None` if it's a new key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":45087,"byte_end":45093,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"remove","qualname":"<JMap<'a>>::remove","value":"fn (&self, key: JObject<'a>) -> Result<Option<JObject<'a>>>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from the map. Returns `Some` with the removed value and\n `None` if there was no value for the key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":45754,"byte_end":45758,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"iter","qualname":"<JMap<'a>>::iter","value":"fn (&'a self) -> Result<JMapIter<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Get key/value iterator for the map. This is done by getting the\n `EntrySet` from java and iterating over it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":47339,"byte_end":47347,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"JMapIter","qualname":"::wrapper::objects::jmap::JMapIter","value":"JMapIter {  }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277}],"decl_id":null,"docs":" An iterator over the keys and values in a map.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49426,"byte_end":49431,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"JList","qualname":"::wrapper::objects::jlist::JList","value":"JList {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297}],"decl_id":null,"docs":" Wrapper for JObjects that implement `java/util/Map`. Provides methods to get\n and set entries and a way to iterate over key/value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":50132,"byte_end":50140,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"from_env","qualname":"<JList<'a>>::from_env","value":"fn (env: &'a JNIEnv<'a>, obj: JObject<'a>) -> Result<JList<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Create a map from the environment and an object. This looks up the\n necessary class and method ids to call all of the methods on it so that\n exra work doesn't need to be done on every method call.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":50985,"byte_end":50988,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"get","qualname":"<JList<'a>>::get","value":"fn (&self, idx: jint) -> Result<Option<JObject>>","parent":null,"children":[],"decl_id":null,"docs":" Look up the value for a key. Returns `Some` if it's found and `None` if\n a null pointer would be returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":51549,"byte_end":51552,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"add","qualname":"<JList<'a>>::add","value":"fn (&self, value: JObject<'a>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Append an element to the list\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":51944,"byte_end":51950,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"insert","qualname":"<JList<'a>>::insert","value":"fn (&self, idx: jint, value: JObject<'a>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Insert an element at a specific index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":52369,"byte_end":52375,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"remove","qualname":"<JList<'a>>::remove","value":"fn (&self, idx: jint) -> Result<Option<JObject<'a>>>","parent":null,"children":[],"decl_id":null,"docs":" Remove an element from the list by index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":52938,"byte_end":52942,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"size","qualname":"<JList<'a>>::size","value":"fn (&self) -> Result<jint>","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the list\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":53368,"byte_end":53371,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"pop","qualname":"<JList<'a>>::pop","value":"fn (&self) -> Result<Option<JObject<'a>>>","parent":null,"children":[],"decl_id":null,"docs":" Pop the last element from the list","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":54117,"byte_end":54121,"line_start":180,"line_end":180,"column_start":12,"column_end":16},"name":"iter","qualname":"<JList<'a>>::iter","value":"fn (&'a self) -> Result<JListIter<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Get key/value iterator for the map. This is done by getting the\n `EntrySet` from java and iterating over it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":54466,"byte_end":54475,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"JListIter","qualname":"::wrapper::objects::jlist::JListIter","value":"JListIter {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" An iterator over the keys and values in a map.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55244,"byte_end":55255,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JByteBuffer","qualname":"::wrapper::objects::jbytebuffer::JByteBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lifetime'd representation of a `jobject` that is an instance of the\n ByteBuffer Java class. Just a `JObject` wrapped in a new class.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55199,"byte_end":55209,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55233,"byte_end":55273,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":56918,"byte_end":56927,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"GlobalRef","qualname":"::wrapper::objects::global_ref::GlobalRef","value":"GlobalRef {  }","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" A global JVM reference. These are \"pinned\" by the garbage collector and are\n guaranteed to not get collected until released. Thus, this is allowed to\n outlive the `JNIEnv` that it came from and can be used in other threads.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57344,"byte_end":57352,"line_start":53,"line_end":53,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<GlobalRef>::from_raw","value":"fn (vm: JavaVM, obj: sys::jobject) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new global reference. This assumes that `NewGlobalRef`\n has already been called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57667,"byte_end":57673,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"as_obj","qualname":"<GlobalRef>::as_obj","value":"fn <'a> (&'a self) -> JObject<'a>","parent":null,"children":[],"decl_id":null,"docs":" Get the object from the global ref","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":59870,"byte_end":59879,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"AutoLocal","qualname":"::wrapper::objects::auto_local::AutoLocal","value":"AutoLocal {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":341}],"decl_id":null,"docs":" Auto-delete wrapper for local refs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":60217,"byte_end":60220,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoLocal<'a>>::new","value":"fn (env: &'a JNIEnv<'a>, obj: JObject<'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new auto-delete wrapper for a local ref.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":60647,"byte_end":60653,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"forget","qualname":"<AutoLocal<'a>>::forget","value":"fn (self) -> JObject<'a>","parent":null,"children":[],"decl_id":null,"docs":" Forget the wrapper, returning the original object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":60937,"byte_end":60943,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"as_obj","qualname":"<AutoLocal<'a>>::as_obj","value":"fn <'b> (&'b self) -> JObject<'b>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the wrapped object","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":756},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strings","qualname":"::wrapper::strings","value":"/home/yoga07/.cargo/registry/src/github.com-1ecc6299db9ec823/jni-0.10.2/src/wrapper/strings/mod.rs","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":868}],"decl_id":null,"docs":" String types for going to/from java strings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":61744,"byte_end":61753,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"JNIString","qualname":"::wrapper::strings::ffi_str::JNIString","value":"JNIString {  }","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" Wrapper for `std::ffi::CString` that also takes care of encoding between\n UTF-8 and Java's Modified UTF-8. As with `CString`, this implements `Deref`\n to `&JNIStr`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":61909,"byte_end":61915,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"JNIStr","qualname":"::wrapper::strings::ffi_str::JNIStr","value":"JNIStr {  }","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":" Wrapper for `std::ffi::CStr` that also takes care of encoding between\n UTF-8 and Java's Modified UTF-8.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63160,"byte_end":63168,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<JNIString>::borrowed","value":"fn (&self) -> &JNIStr","parent":null,"children":[],"decl_id":null,"docs":" Get the borrowed version of the JNIString. Equivalent to\n `CString::borrowed`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63343,"byte_end":63351,"line_start":85,"line_end":85,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<JNIStr>::from_ptr","value":"fn <'a> (ptr: *const c_char) -> &'a JNIStr","parent":null,"children":[],"decl_id":null,"docs":" Construct a reference to a `JNIStr` from a pointer. Equivalent to\n `CStr::from_ptr`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64189,"byte_end":64196,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"JavaStr","qualname":"::wrapper::strings::java_str::JavaStr","value":"JavaStr {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365}],"decl_id":null,"docs":" Reference to a string in the JVM. Holds a pointer to the array\n returned by GetStringUTFChars. Calls ReleaseStringUTFChars on Drop.\n Can be converted to a `&JNIStr` with the same cost as the `&CStr.from_ptr`\n conversion.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64456,"byte_end":64464,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"from_env","qualname":"<JavaStr<'a>>::from_env","value":"fn (env: &'a JNIEnv<'a>, obj: JString<'a>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Build a `JavaStr` from an object and a reference to the environment. You\n probably want to use `JNIEnv::get_string` instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64864,"byte_end":64871,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<JavaStr<'a>>::get_raw","value":"fn (&self) -> *const c_char","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw C string pointer from the JavaStr. This will be\n encoded using the JVM internal `CESU-8`-style.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":67882,"byte_end":67888,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"JNIEnv","qualname":"::wrapper::jnienv::JNIEnv","value":"JNIEnv {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":383}],"decl_id":null,"docs":" FFI-compatible JNIEnv struct. You can safely use this as the JNIEnv argument\n to exported methods that will be called by java. This is where most of the\n magic happens. All methods on this object are wrappers around JNI functions,\n so the documentation on their behavior is still pretty applicable.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":67860,"byte_end":67870,"line_start":86,"line_end":86,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":68135,"byte_end":68143,"line_start":96,"line_end":96,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<JNIEnv<'a>>::from_raw","value":"fn (ptr: *mut sys::JNIEnv) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a JNIEnv from a raw pointer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":68406,"byte_end":68417,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"get_version","qualname":"<JNIEnv<'a>>::get_version","value":"fn (&self) -> Result<JNIVersion>","parent":null,"children":[],"decl_id":null,"docs":" Get the java version that we're being executed from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":68685,"byte_end":68697,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"define_class","qualname":"<JNIEnv<'a>>::define_class","value":"fn <S> (&self, name: S, loader: JObject, buf: &[u8]) -> Result<JClass>","parent":null,"children":[],"decl_id":null,"docs":" Define a new java class. See the JNI docs for more details - I've never\n had occasion to use this and haven't researched it fully.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":69324,"byte_end":69334,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"find_class","qualname":"<JNIEnv<'a>>::find_class","value":"fn <S> (&self, name: S) -> Result<JClass<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Look up a class by name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":69661,"byte_end":69675,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"get_superclass","qualname":"<JNIEnv<'a>>::get_superclass","value":"fn <T> (&self, class: T) -> Result<JClass>","parent":null,"children":[],"decl_id":null,"docs":" Get the superclass for a particular class. As with `find_class`, takes\n a descriptor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":69950,"byte_end":69968,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"is_assignable_from","qualname":"<JNIEnv<'a>>::is_assignable_from","value":"fn <T, U> (&self, class1: T, class2: U) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether class1 is assignable from class2.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":70810,"byte_end":70824,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"is_instance_of","qualname":"<JNIEnv<'a>>::is_instance_of","value":"fn <T> (&self, object: JObject<'a>, class: T) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the object reference can be cast to the given type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":71689,"byte_end":71694,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"throw","qualname":"<JNIEnv<'a>>::throw","value":"fn <E> (&self, obj: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Raise an exception from an existing object. This will continue being\n thrown in java unless `exception_clear` is called.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":72306,"byte_end":72315,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"throw_new","qualname":"<JNIEnv<'a>>::throw_new","value":"fn <S, T> (&self, class: T, msg: S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Create and throw a new exception from a class descriptor and an error\n message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":72720,"byte_end":72738,"line_start":239,"line_end":239,"column_start":12,"column_end":30},"name":"exception_occurred","qualname":"<JNIEnv<'a>>::exception_occurred","value":"fn (&self) -> Result<JThrowable>","parent":null,"children":[],"decl_id":null,"docs":" Check whether or not an exception is currently in the process of being\n thrown. An exception is in this state from the time it gets thrown and\n not caught in a java function until `exception_clear` is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":72965,"byte_end":72983,"line_start":245,"line_end":245,"column_start":12,"column_end":30},"name":"exception_describe","qualname":"<JNIEnv<'a>>::exception_describe","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Print exception information to the console.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":73284,"byte_end":73299,"line_start":253,"line_end":253,"column_start":12,"column_end":27},"name":"exception_clear","qualname":"<JNIEnv<'a>>::exception_clear","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clear an exception in the process of being thrown. If this is never\n called, the exception will continue being thrown when control is\n returned to java.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":73516,"byte_end":73527,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"fatal_error","qualname":"<JNIEnv<'a>>::fatal_error","value":"fn <S> (&self, msg: S) -> !","parent":null,"children":[],"decl_id":null,"docs":" Abort the JVM with an error message.\n","sig":null,"attributes":[{"value":"allow(unused_variables, unreachable_code)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":73460,"byte_end":73504,"line_start":259,"line_end":259,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":73979,"byte_end":73994,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"exception_check","qualname":"<JNIEnv<'a>>::exception_check","value":"fn (&self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if an exception is being thrown. This only differs from\n `exception_occurred` in that it doesn't return the actual thrown\n exception.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":74214,"byte_end":74236,"line_start":279,"line_end":279,"column_start":12,"column_end":34},"name":"new_direct_byte_buffer","qualname":"<JNIEnv<'a>>::new_direct_byte_buffer","value":"fn (&self, data: &mut [u8]) -> Result<JByteBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of a direct java.nio.ByteBuffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":74667,"byte_end":74692,"line_start":293,"line_end":293,"column_start":12,"column_end":37},"name":"get_direct_buffer_address","qualname":"<JNIEnv<'a>>::get_direct_buffer_address","value":"fn (&self, buf: JByteBuffer) -> Result<&mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting address of the memory of the direct\n java.nio.ByteBuffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":75096,"byte_end":75122,"line_start":301,"line_end":301,"column_start":12,"column_end":38},"name":"get_direct_buffer_capacity","qualname":"<JNIEnv<'a>>::get_direct_buffer_capacity","value":"fn (&self, buf: JByteBuffer) -> Result<jlong>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the direct java.nio.ByteBuffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":75528,"byte_end":75542,"line_start":310,"line_end":310,"column_start":12,"column_end":26},"name":"new_global_ref","qualname":"<JNIEnv<'a>>::new_global_ref","value":"fn (&self, obj: JObject) -> Result<GlobalRef>","parent":null,"children":[],"decl_id":null,"docs":" Turns an object into a global ref. This has the benefit of removing the\n lifetime bounds since it's guaranteed to not get GC'd by java. It\n releases the GC pin upon being dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":76085,"byte_end":76098,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"new_local_ref","qualname":"<JNIEnv<'a>>::new_local_ref","value":"fn <T> (&self, obj: JObject) -> Result<JObject>","parent":null,"children":[],"decl_id":null,"docs":" Create a new local ref to an object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":76637,"byte_end":76647,"line_start":334,"line_end":334,"column_start":12,"column_end":22},"name":"auto_local","qualname":"<JNIEnv<'a>>::auto_local","value":"fn (&'a self, obj: JObject<'a>) -> AutoLocal<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new auto-deleted local reference.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":77569,"byte_end":77585,"line_start":356,"line_end":356,"column_start":12,"column_end":28},"name":"delete_local_ref","qualname":"<JNIEnv<'a>>::delete_local_ref","value":"fn (&self, obj: JObject) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the local reference.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":78264,"byte_end":78280,"line_start":375,"line_end":375,"column_start":12,"column_end":28},"name":"push_local_frame","qualname":"<JNIEnv<'a>>::push_local_frame","value":"fn (&self, capacity: i32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new local reference frame, in which at least a given number\n of local\n references can be created.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":78691,"byte_end":78706,"line_start":385,"line_end":385,"column_start":12,"column_end":27},"name":"pop_local_frame","qualname":"<JNIEnv<'a>>::pop_local_frame","value":"fn (&self, result: JObject) -> Result<JObject>","parent":null,"children":[],"decl_id":null,"docs":" Pops off the current local reference frame, frees all the local\n references allocated\n on the current stack frame.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":78995,"byte_end":79011,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"with_local_frame","qualname":"<JNIEnv<'a>>::with_local_frame","value":"fn <F> (&self, capacity: i32, f: F) -> Result<JObject>","parent":null,"children":[],"decl_id":null,"docs":" Provides a convenient way to use `push_local_frame` by automatically\n calling\n `pop_local_frame` function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":79496,"byte_end":79508,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"alloc_object","qualname":"<JNIEnv<'a>>::alloc_object","value":"fn <T> (&self, class: T) -> Result<JObject>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new object from a class descriptor without running a\n constructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":80956,"byte_end":80969,"line_start":458,"line_end":458,"column_start":12,"column_end":25},"name":"get_method_id","qualname":"<JNIEnv<'a>>::get_method_id","value":"fn <'c, T, U, V> (&self, class: T, name: U, sig: V) -> Result<JMethodID<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Look up a method by class descriptor, name, and\n signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":81716,"byte_end":81736,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"get_static_method_id","qualname":"<JNIEnv<'a>>::get_static_method_id","value":"fn <'c, T, U, V> (&self, class: T, name: U, sig: V) -> Result<JStaticMethodID<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Look up a static method by class descriptor, name, and\n signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":82461,"byte_end":82473,"line_start":511,"line_end":511,"column_start":12,"column_end":24},"name":"get_field_id","qualname":"<JNIEnv<'a>>::get_field_id","value":"fn <'c, T, U, V> (&self, class: T, name: U, sig: V) -> Result<JFieldID<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Look up the field ID for a class/name/type combination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":83651,"byte_end":83670,"line_start":550,"line_end":550,"column_start":12,"column_end":31},"name":"get_static_field_id","qualname":"<JNIEnv<'a>>::get_static_field_id","value":"fn <'c, T, U, V> (&self, class: T, name: U, sig: V) -> Result<JStaticFieldID<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Look up the static field ID for a class/name/type combination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":84729,"byte_end":84745,"line_start":589,"line_end":589,"column_start":12,"column_end":28},"name":"get_object_class","qualname":"<JNIEnv<'a>>::get_object_class","value":"fn (&self, obj: JObject) -> Result<JClass<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Get the class for an object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":85273,"byte_end":85298,"line_start":600,"line_end":600,"column_start":19,"column_end":44},"name":"call_static_method_unsafe","qualname":"<JNIEnv<'a>>::call_static_method_unsafe","value":"fn <T, U> (&self, class: T, method_id: U, ret: JavaType, args: &[JValue]) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Call a static method in an unsafe manner. This does nothing to check\n whether the method is valid to call on the class, whether the return\n type is correct, or whether the number of args is valid for the method.","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":85231,"byte_end":85254,"line_start":599,"line_end":599,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":89344,"byte_end":89362,"line_start":712,"line_end":712,"column_start":19,"column_end":37},"name":"call_method_unsafe","qualname":"<JNIEnv<'a>>::call_method_unsafe","value":"fn <T> (&self, obj: JObject, method_id: T, ret: JavaType, args: &[JValue]) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Call an object method in an unsafe manner. This does nothing to check\n whether the method is valid to call on the object, whether the return\n type is correct, or whether the number of args is valid for the method.","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":89302,"byte_end":89325,"line_start":711,"line_end":711,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":93115,"byte_end":93126,"line_start":808,"line_end":808,"column_start":12,"column_end":23},"name":"call_method","qualname":"<JNIEnv<'a>>::call_method","value":"fn <S, T> (&'a self, obj: JObject, name: S, sig: T, args: &[JValue]) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Calls an object method safely. This comes with a number of\n lookups/checks. It","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":94350,"byte_end":94368,"line_start":845,"line_end":845,"column_start":12,"column_end":30},"name":"call_static_method","qualname":"<JNIEnv<'a>>::call_static_method","value":"fn <T, U, V> (&self, class: T, name: U, sig: V, args: &[JValue]) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Calls a static method safely. This comes with a number of\n lookups/checks. It","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":95183,"byte_end":95193,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"new_object","qualname":"<JNIEnv<'a>>::new_object","value":"fn <'c, T, U> (&self, class: T, ctor_sig: U, ctor_args: &[JValue]) -> Result<JObject<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new object using a constructor. This is done safely using\n checks similar to those in `call_static_method`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":96090,"byte_end":96106,"line_start":903,"line_end":903,"column_start":12,"column_end":28},"name":"new_object_by_id","qualname":"<JNIEnv<'a>>::new_object_by_id","value":"fn <'c, T> (&self, class: T, ctor_id: JMethodID, ctor_args: &[JValue]) -> Result<JObject<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new object using a constructor. Arguments aren't checked\n because\n of the `JMethodID` usage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":96847,"byte_end":96855,"line_start":929,"line_end":929,"column_start":12,"column_end":20},"name":"get_list","qualname":"<JNIEnv<'a>>::get_list","value":"fn (&self, obj: JObject<'a>) -> Result<JList>","parent":null,"children":[],"decl_id":null,"docs":" Cast a JObject to a JString. This won't throw exceptions or return errors\n in the event that the object isn't actually a list, but the methods on\n the resulting map object will.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":97198,"byte_end":97205,"line_start":937,"line_end":937,"column_start":12,"column_end":19},"name":"get_map","qualname":"<JNIEnv<'a>>::get_map","value":"fn (&self, obj: JObject<'a>) -> Result<JMap>","parent":null,"children":[],"decl_id":null,"docs":" Cast a JObject to a JMap. This won't throw exceptions or return errors\n in the event that the object isn't actually a map, but the methods on\n the resulting map object will.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":97617,"byte_end":97627,"line_start":947,"line_end":947,"column_start":12,"column_end":22},"name":"get_string","qualname":"<JNIEnv<'a>>::get_string","value":"fn (&self, obj: JString<'a>) -> Result<JavaStr>","parent":null,"children":[],"decl_id":null,"docs":" Get a JavaStr from a JString. This allows conversions from java string\n objects to rust strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":97996,"byte_end":98016,"line_start":956,"line_end":956,"column_start":19,"column_end":39},"name":"get_string_utf_chars","qualname":"<JNIEnv<'a>>::get_string_utf_chars","value":"fn (&self, obj: JString) -> Result<*const c_char>","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the character array beneath a JString. This is in\n Java's modified UTF-8 and will leak memory if `release_string_utf_chars`\n is never called.\n","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":97954,"byte_end":97977,"line_start":955,"line_end":955,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":98458,"byte_end":98482,"line_start":969,"line_end":969,"column_start":19,"column_end":43},"name":"release_string_utf_chars","qualname":"<JNIEnv<'a>>::release_string_utf_chars","value":"fn (&self, obj: JString, arr: *const c_char) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unpin the array returned by `get_string_utf_chars`.\n","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":98416,"byte_end":98439,"line_start":968,"line_end":968,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":98931,"byte_end":98941,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"name":"new_string","qualname":"<JNIEnv<'a>>::new_string","value":"fn <S> (&self, from: S) -> Result<JString<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java string object from a rust string. This requires a\n re-encoding of rusts *real* UTF-8 strings to java's modified UTF-8\n format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":99164,"byte_end":99180,"line_start":985,"line_end":985,"column_start":12,"column_end":28},"name":"get_array_length","qualname":"<JNIEnv<'a>>::get_array_length","value":"fn (&self, array: jarray) -> Result<jsize>","parent":null,"children":[],"decl_id":null,"docs":" Get the length of a java array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":99811,"byte_end":99827,"line_start":998,"line_end":998,"column_start":12,"column_end":28},"name":"new_object_array","qualname":"<JNIEnv<'a>>::new_object_array","value":"fn <T> (&self, length: jsize, element_class: T, initial_element: JObject) -> Result<jobjectArray>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new array holding objects in class `element_class`.\n All elements are initially set to `initial_element`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":100313,"byte_end":100337,"line_start":1018,"line_end":1018,"column_start":12,"column_end":36},"name":"get_object_array_element","qualname":"<JNIEnv<'a>>::get_object_array_element","value":"fn (&self, array: jobjectArray, index: jsize) -> Result<JObject>","parent":null,"children":[],"decl_id":null,"docs":" Returns an element of the `jobjectArray` array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":100673,"byte_end":100697,"line_start":1029,"line_end":1029,"column_start":12,"column_end":36},"name":"set_object_array_element","qualname":"<JNIEnv<'a>>::set_object_array_element","value":"fn (&self, array: jobjectArray, index: jsize, value: JObject) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets an element of the `jobjectArray` array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":101128,"byte_end":101149,"line_start":1046,"line_end":1046,"column_start":12,"column_end":33},"name":"byte_array_from_slice","qualname":"<JNIEnv<'a>>::byte_array_from_slice","value":"fn (&self, buf: &[u8]) -> Result<jbyteArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java byte array from a rust byte slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":101637,"byte_end":101655,"line_start":1063,"line_end":1063,"column_start":12,"column_end":30},"name":"convert_byte_array","qualname":"<JNIEnv<'a>>::convert_byte_array","value":"fn (&self, array: jbyteArray) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Converts a java byte array to a rust vector of bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":102277,"byte_end":102294,"line_start":1082,"line_end":1082,"column_start":12,"column_end":29},"name":"new_boolean_array","qualname":"<JNIEnv<'a>>::new_boolean_array","value":"fn (&self, length: jsize) -> Result<jbooleanArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java boolean array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":102523,"byte_end":102537,"line_start":1088,"line_end":1088,"column_start":12,"column_end":26},"name":"new_byte_array","qualname":"<JNIEnv<'a>>::new_byte_array","value":"fn (&self, length: jsize) -> Result<jbyteArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java byte array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":102757,"byte_end":102771,"line_start":1094,"line_end":1094,"column_start":12,"column_end":26},"name":"new_char_array","qualname":"<JNIEnv<'a>>::new_char_array","value":"fn (&self, length: jsize) -> Result<jcharArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java char array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":102992,"byte_end":103007,"line_start":1100,"line_end":1100,"column_start":12,"column_end":27},"name":"new_short_array","qualname":"<JNIEnv<'a>>::new_short_array","value":"fn (&self, length: jsize) -> Result<jshortArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java short array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":103229,"byte_end":103242,"line_start":1106,"line_end":1106,"column_start":12,"column_end":25},"name":"new_int_array","qualname":"<JNIEnv<'a>>::new_int_array","value":"fn (&self, length: jsize) -> Result<jintArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java int array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":103459,"byte_end":103473,"line_start":1112,"line_end":1112,"column_start":12,"column_end":26},"name":"new_long_array","qualname":"<JNIEnv<'a>>::new_long_array","value":"fn (&self, length: jsize) -> Result<jlongArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java long array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":103694,"byte_end":103709,"line_start":1118,"line_end":1118,"column_start":12,"column_end":27},"name":"new_float_array","qualname":"<JNIEnv<'a>>::new_float_array","value":"fn (&self, length: jsize) -> Result<jfloatArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java float array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":103934,"byte_end":103950,"line_start":1124,"line_end":1124,"column_start":12,"column_end":28},"name":"new_double_array","qualname":"<JNIEnv<'a>>::new_double_array","value":"fn (&self, length: jsize) -> Result<jdoubleArray>","parent":null,"children":[],"decl_id":null,"docs":" Create a new java double array of supplied length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":104218,"byte_end":104242,"line_start":1131,"line_end":1131,"column_start":12,"column_end":36},"name":"get_boolean_array_region","qualname":"<JNIEnv<'a>>::get_boolean_array_region","value":"fn (&self, array: jbooleanArray, start: jsize, buf: &mut [jboolean]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java boolean array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":104757,"byte_end":104778,"line_start":1151,"line_end":1151,"column_start":12,"column_end":33},"name":"get_byte_array_region","qualname":"<JNIEnv<'a>>::get_byte_array_region","value":"fn (&self, array: jbyteArray, start: jsize, buf: &mut [jbyte]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java byte array from the `start` index to the `buf`\n slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":105281,"byte_end":105302,"line_start":1171,"line_end":1171,"column_start":12,"column_end":33},"name":"get_char_array_region","qualname":"<JNIEnv<'a>>::get_char_array_region","value":"fn (&self, array: jcharArray, start: jsize, buf: &mut [jchar]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java char array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":105806,"byte_end":105828,"line_start":1191,"line_end":1191,"column_start":12,"column_end":34},"name":"get_short_array_region","qualname":"<JNIEnv<'a>>::get_short_array_region","value":"fn (&self, array: jshortArray, start: jsize, buf: &mut [jshort]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java short array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":106334,"byte_end":106354,"line_start":1211,"line_end":1211,"column_start":12,"column_end":32},"name":"get_int_array_region","qualname":"<JNIEnv<'a>>::get_int_array_region","value":"fn (&self, array: jintArray, start: jsize, buf: &mut [jint]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java int array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":106853,"byte_end":106874,"line_start":1231,"line_end":1231,"column_start":12,"column_end":33},"name":"get_long_array_region","qualname":"<JNIEnv<'a>>::get_long_array_region","value":"fn (&self, array: jlongArray, start: jsize, buf: &mut [jlong]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java long array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":107378,"byte_end":107400,"line_start":1251,"line_end":1251,"column_start":12,"column_end":34},"name":"get_float_array_region","qualname":"<JNIEnv<'a>>::get_float_array_region","value":"fn (&self, array: jfloatArray, start: jsize, buf: &mut [jfloat]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java float array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":107909,"byte_end":107932,"line_start":1271,"line_end":1271,"column_start":12,"column_end":35},"name":"get_double_array_region","qualname":"<JNIEnv<'a>>::get_double_array_region","value":"fn (&self, array: jdoubleArray, start: jsize, buf: &mut [jdouble]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy elements of the java double array from the `start` index to the\n `buf` slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":108448,"byte_end":108472,"line_start":1291,"line_end":1291,"column_start":12,"column_end":36},"name":"set_boolean_array_region","qualname":"<JNIEnv<'a>>::set_boolean_array_region","value":"fn (&self, array: jbooleanArray, start: jsize, buf: &[jboolean]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java boolean array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":108981,"byte_end":109002,"line_start":1311,"line_end":1311,"column_start":12,"column_end":33},"name":"set_byte_array_region","qualname":"<JNIEnv<'a>>::set_byte_array_region","value":"fn (&self, array: jbyteArray, start: jsize, buf: &[jbyte]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java byte array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":109499,"byte_end":109520,"line_start":1331,"line_end":1331,"column_start":12,"column_end":33},"name":"set_char_array_region","qualname":"<JNIEnv<'a>>::set_char_array_region","value":"fn (&self, array: jcharArray, start: jsize, buf: &[jchar]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java char array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":110018,"byte_end":110040,"line_start":1351,"line_end":1351,"column_start":12,"column_end":34},"name":"set_short_array_region","qualname":"<JNIEnv<'a>>::set_short_array_region","value":"fn (&self, array: jshortArray, start: jsize, buf: &[jshort]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java short array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":110540,"byte_end":110560,"line_start":1371,"line_end":1371,"column_start":12,"column_end":32},"name":"set_int_array_region","qualname":"<JNIEnv<'a>>::set_int_array_region","value":"fn (&self, array: jintArray, start: jsize, buf: &[jint]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java int array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":111014,"byte_end":111035,"line_start":1386,"line_end":1386,"column_start":12,"column_end":33},"name":"set_long_array_region","qualname":"<JNIEnv<'a>>::set_long_array_region","value":"fn (&self, array: jlongArray, start: jsize, buf: &[jlong]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java long array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":111533,"byte_end":111555,"line_start":1406,"line_end":1406,"column_start":12,"column_end":34},"name":"set_float_array_region","qualname":"<JNIEnv<'a>>::set_float_array_region","value":"fn (&self, array: jfloatArray, start: jsize, buf: &[jfloat]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java float array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":112058,"byte_end":112081,"line_start":1426,"line_end":1426,"column_start":12,"column_end":35},"name":"set_double_array_region","qualname":"<JNIEnv<'a>>::set_double_array_region","value":"fn (&self, array: jdoubleArray, start: jsize, buf: &[jdouble]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of the `buf` slice to the java double array at the\n `start` index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":112604,"byte_end":112620,"line_start":1446,"line_end":1446,"column_start":19,"column_end":35},"name":"get_field_unsafe","qualname":"<JNIEnv<'a>>::get_field_unsafe","value":"fn <T> (&self, obj: JObject, field: T, ty: JavaType) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a field without checking the provided type against the actual field.\n","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":112562,"byte_end":112585,"line_start":1445,"line_end":1445,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":114878,"byte_end":114894,"line_start":1499,"line_end":1499,"column_start":19,"column_end":35},"name":"set_field_unsafe","qualname":"<JNIEnv<'a>>::set_field_unsafe","value":"fn <T> (&self, obj: JObject, field: T, val: JValue) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a field without any type checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":116643,"byte_end":116652,"line_start":1548,"line_end":1548,"column_start":12,"column_end":21},"name":"get_field","qualname":"<JNIEnv<'a>>::get_field","value":"fn <S, T> (&self, obj: JObject, name: S, ty: T) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a field. Requires an object class lookup and a field id lookup\n internally.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":117196,"byte_end":117205,"line_start":1564,"line_end":1564,"column_start":12,"column_end":21},"name":"set_field","qualname":"<JNIEnv<'a>>::set_field","value":"fn <S, T> (&self, obj: JObject, name: S, ty: T, val: JValue) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a field. Does the same lookups as `get_field` and ensures that the\n type matches the given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":118780,"byte_end":118803,"line_start":1610,"line_end":1610,"column_start":19,"column_end":42},"name":"get_static_field_unsafe","qualname":"<JNIEnv<'a>>::get_static_field_unsafe","value":"fn <T, U> (&self, class: T, field: U, ty: JavaType) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a static field without checking the provided type against the actual\n field.\n","sig":null,"attributes":[{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":118738,"byte_end":118761,"line_start":1609,"line_end":1609,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":121369,"byte_end":121385,"line_start":1673,"line_end":1673,"column_start":12,"column_end":28},"name":"get_static_field","qualname":"<JNIEnv<'a>>::get_static_field","value":"fn <T, U, V> (&self, class: T, field: U, sig: V) -> Result<JValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a static field. Requires a class lookup and a field id lookup\n internally.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":122530,"byte_end":122544,"line_start":1699,"line_end":1699,"column_start":19,"column_end":33},"name":"set_rust_field","qualname":"<JNIEnv<'a>>::set_rust_field","value":"fn <S, T> (&self, obj: JObject, field: S, rust_object: T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Surrenders ownership of a rust object to Java. Requires an object with a\n `long` field to store the pointer. The Rust value will be wrapped in a\n Mutex since Java will be controlling where it'll be used thread-wise.\n Unsafe because it leaks memory if `take_rust_field` is never called (so\n be sure to make a finalizer).","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":122485,"byte_end":122511,"line_start":1698,"line_end":1698,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":123804,"byte_end":123818,"line_start":1728,"line_end":1728,"column_start":19,"column_end":33},"name":"get_rust_field","qualname":"<JNIEnv<'a>>::get_rust_field","value":"fn <S, T> (&self, obj: JObject, field: S) -> Result<MutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a lock on a Rust value that's been given to a Java object. Java\n still retains ownership and `take_rust_field` will still need to be\n called at some point. Checks for a null pointer, but assumes that the\n data it ponts to is valid for T.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":123759,"byte_end":123785,"line_start":1727,"line_end":1727,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":124538,"byte_end":124553,"line_start":1747,"line_end":1747,"column_start":19,"column_end":34},"name":"take_rust_field","qualname":"<JNIEnv<'a>>::take_rust_field","value":"fn <S, T> (&self, obj: JObject, field: S) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Take a Rust field back from Java. Makes sure that the pointer is\n non-null, but still assumes that the data it points to is valid for T.\n Sets the field to a null pointer to signal that it's empty.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":124493,"byte_end":124519,"line_start":1746,"line_end":1746,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":125761,"byte_end":125769,"line_start":1784,"line_end":1784,"column_start":12,"column_end":20},"name":"lock_obj","qualname":"<JNIEnv<'a>>::lock_obj","value":"fn (&self, obj: JObject) -> Result<MonitorGuard<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Lock a Java object. The MonitorGuard that this returns is responsible\n for ensuring that it gets unlocked.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":126144,"byte_end":126164,"line_start":1797,"line_end":1797,"column_start":12,"column_end":32},"name":"get_native_interface","qualname":"<JNIEnv<'a>>::get_native_interface","value":"fn (&self) -> *mut sys::JNIEnv","parent":null,"children":[],"decl_id":null,"docs":" Returns underlying `sys::JNIEnv` interface.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":126273,"byte_end":126284,"line_start":1802,"line_end":1802,"column_start":12,"column_end":23},"name":"get_java_vm","qualname":"<JNIEnv<'a>>::get_java_vm","value":"fn (&self) -> Result<JavaVM>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Java VM interface.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":126659,"byte_end":126680,"line_start":1813,"line_end":1813,"column_start":12,"column_end":33},"name":"ensure_local_capacity","qualname":"<JNIEnv<'a>>::ensure_local_capacity","value":"fn (&self, capacity: jint) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least a given number of local references can be created\n in the current thread.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":126903,"byte_end":126915,"line_start":1820,"line_end":1820,"column_start":12,"column_end":24},"name":"MonitorGuard","qualname":"::wrapper::jnienv::MonitorGuard","value":"MonitorGuard {  }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539}],"decl_id":null,"docs":" Guard for a lock on a java object. This gets returned from the `lock_obj`\n method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127629,"byte_end":127635,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"JavaVM","qualname":"::wrapper::java_vm::vm::JavaVM","value":"","parent":null,"children":[],"decl_id":null,"docs":" The invocation API.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":128475,"byte_end":128483,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<JavaVM>::from_raw","value":"fn (ptr: *mut sys::JavaVM) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a JavaVM from a raw pointer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":128668,"byte_end":128687,"line_start":48,"line_end":48,"column_start":12,"column_end":31},"name":"get_java_vm_pointer","qualname":"<JavaVM>::get_java_vm_pointer","value":"fn (&self) -> *mut sys::JavaVM","parent":null,"children":[],"decl_id":null,"docs":" Returns underlying `sys::JavaVM` interface.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":128930,"byte_end":128951,"line_start":55,"line_end":55,"column_start":12,"column_end":33},"name":"attach_current_thread","qualname":"<JavaVM>::attach_current_thread","value":"fn (&self) -> Result<AttachGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the current thread to a Java VM. The resulting `AttachGuard`\n can be dereferenced to a `JNIEnv` and automatically detaches the thread\n when dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":129440,"byte_end":129471,"line_start":70,"line_end":70,"column_start":12,"column_end":43},"name":"attach_current_thread_as_daemon","qualname":"<JavaVM>::attach_current_thread_as_daemon","value":"fn (&self) -> Result<JNIEnv>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the current thread to a Java VM as a daemon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130022,"byte_end":130029,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_env","qualname":"<JavaVM>::get_env","value":"fn (&self) -> Result<JNIEnv>","parent":null,"children":[],"decl_id":null,"docs":" Get the `JNIEnv` associated with the current thread, or\n `ErrorKind::Detached`\n if the current thread is not attached to the java VM.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130519,"byte_end":130530,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"AttachGuard","qualname":"::wrapper::java_vm::vm::AttachGuard","value":"AttachGuard {  }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551}],"decl_id":null,"docs":" A RAII implementation of scoped guard which detaches the current thread\n when dropped. The attached `JNIEnv` can be accessed through this guard\n via its `Deref` implementation.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8938,"byte_end":8948,"line_start":17,"line_end":17,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":15822,"byte_end":15827,"line_start":67,"line_end":67,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":15879,"byte_end":15884,"line_start":69,"line_end":69,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,100,101,115,99,46,114,115],"byte_start":17139,"byte_end":17140,"line_start":14,"line_end":14,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,99,108,97,115,115,95,100,101,115,99,46,114,115],"byte_start":17409,"byte_end":17410,"line_start":16,"line_end":16,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,99,108,97,115,115,95,100,101,115,99,46,114,115],"byte_start":17581,"byte_end":17588,"line_start":25,"line_end":25,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20469,"byte_end":20478,"line_start":30,"line_end":30,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20814,"byte_end":20820,"line_start":42,"line_end":42,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20990,"byte_end":20999,"line_start":48,"line_end":48,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21572,"byte_end":21581,"line_start":21,"line_end":21,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22391,"byte_end":22399,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22761,"byte_end":22769,"line_start":59,"line_end":59,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23463,"byte_end":23476,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23933,"byte_end":23946,"line_start":94,"line_end":94,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":29008,"byte_end":29014,"line_start":27,"line_end":27,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":29097,"byte_end":29103,"line_start":33,"line_end":33,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33655,"byte_end":33661,"line_start":172,"line_end":172,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33782,"byte_end":33788,"line_start":179,"line_end":179,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33913,"byte_end":33919,"line_start":186,"line_end":186,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34035,"byte_end":34041,"line_start":193,"line_end":193,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34159,"byte_end":34165,"line_start":200,"line_end":200,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34285,"byte_end":34291,"line_start":207,"line_end":207,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34407,"byte_end":34413,"line_start":214,"line_end":214,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34525,"byte_end":34531,"line_start":221,"line_end":221,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34645,"byte_end":34651,"line_start":228,"line_end":228,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34762,"byte_end":34768,"line_start":235,"line_end":235,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35373,"byte_end":35382,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35541,"byte_end":35550,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36305,"byte_end":36320,"line_start":19,"line_end":19,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36485,"byte_end":36500,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37148,"byte_end":37156,"line_start":17,"line_end":17,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37313,"byte_end":37321,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":37986,"byte_end":38000,"line_start":17,"line_end":17,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":38163,"byte_end":38177,"line_start":26,"line_end":26,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":38929,"byte_end":38936,"line_start":20,"line_end":20,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39113,"byte_end":39120,"line_start":29,"line_end":29,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39235,"byte_end":39242,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39732,"byte_end":39742,"line_start":13,"line_end":13,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39879,"byte_end":39889,"line_start":19,"line_end":19,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":40026,"byte_end":40033,"line_start":27,"line_end":27,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":40140,"byte_end":40150,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40517,"byte_end":40523,"line_start":14,"line_end":14,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40652,"byte_end":40658,"line_start":20,"line_end":20,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40791,"byte_end":40798,"line_start":28,"line_end":28,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40980,"byte_end":40986,"line_start":35,"line_end":35,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41342,"byte_end":41349,"line_start":14,"line_end":14,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41480,"byte_end":41487,"line_start":20,"line_end":20,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41621,"byte_end":41628,"line_start":28,"line_end":28,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41732,"byte_end":41739,"line_start":34,"line_end":34,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42435,"byte_end":42439,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42577,"byte_end":42584,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42670,"byte_end":42674,"line_start":40,"line_end":40,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":47524,"byte_end":47532,"line_start":192,"line_end":192,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":48817,"byte_end":48825,"line_start":241,"line_end":241,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49652,"byte_end":49657,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49796,"byte_end":49803,"line_start":36,"line_end":36,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49890,"byte_end":49895,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":54567,"byte_end":54576,"line_start":199,"line_end":199,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55302,"byte_end":55313,"line_start":11,"line_end":11,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55437,"byte_end":55448,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55586,"byte_end":55593,"line_start":25,"line_end":25,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55701,"byte_end":55712,"line_start":31,"line_end":31,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57057,"byte_end":57066,"line_start":40,"line_end":40,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57105,"byte_end":57112,"line_start":43,"line_end":43,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57208,"byte_end":57217,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57748,"byte_end":57762,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":58286,"byte_end":58300,"line_start":88,"line_end":88,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":59945,"byte_end":59954,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":61049,"byte_end":61058,"line_start":60,"line_end":60,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":61973,"byte_end":61982,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62163,"byte_end":62169,"line_start":35,"line_end":35,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62293,"byte_end":62302,"line_start":43,"line_end":43,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62565,"byte_end":62568,"line_start":55,"line_end":55,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62929,"byte_end":62935,"line_start":68,"line_end":68,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63043,"byte_end":63052,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63216,"byte_end":63222,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63499,"byte_end":63508,"line_start":92,"line_end":92,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63584,"byte_end":63590,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64291,"byte_end":64298,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64960,"byte_end":64967,"line_start":43,"line_end":43,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65260,"byte_end":65263,"line_start":56,"line_end":56,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65428,"byte_end":65434,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65574,"byte_end":65581,"line_start":70,"line_end":70,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":67974,"byte_end":67980,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":127024,"byte_end":127036,"line_start":1826,"line_end":1826,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127677,"byte_end":127683,"line_start":15,"line_end":15,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127708,"byte_end":127714,"line_start":16,"line_end":16,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127724,"byte_end":127730,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130595,"byte_end":130606,"line_start":107,"line_end":107,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130794,"byte_end":130805,"line_start":117,"line_end":117,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130927,"byte_end":130938,"line_start":125,"line_end":125,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7813,"byte_end":7816,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8096,"byte_end":8102,"line_start":212,"line_end":212,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8165,"byte_end":8176,"line_start":215,"line_end":215,"column_start":13,"column_end":24},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8232,"byte_end":8241,"line_start":218,"line_end":218,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":242}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8316,"byte_end":8323,"line_start":221,"line_end":221,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":284}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8391,"byte_end":8398,"line_start":224,"line_end":224,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":756}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,118,101,114,115,105,111,110,46,114,115],"byte_start":8938,"byte_end":8948,"line_start":17,"line_end":17,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1220},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":15822,"byte_end":15827,"line_start":67,"line_end":67,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1316},"to":{"krate":2,"index":1686}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,101,114,114,111,114,115,46,114,115],"byte_start":15879,"byte_end":15884,"line_start":69,"line_end":69,"column_start":48,"column_end":53},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1316},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,100,101,115,99,46,114,115],"byte_start":17139,"byte_end":17140,"line_start":14,"line_end":14,"column_start":29,"column_end":30},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":31},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,99,108,97,115,115,95,100,101,115,99,46,114,115],"byte_start":17409,"byte_end":17410,"line_start":16,"line_end":16,"column_start":38,"column_end":39},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":35},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,99,108,97,115,115,95,100,101,115,99,46,114,115],"byte_start":17581,"byte_end":17588,"line_start":25,"line_end":25,"column_start":39,"column_end":46},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1446},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20469,"byte_end":20478,"line_start":30,"line_end":30,"column_start":39,"column_end":48},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":82},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20814,"byte_end":20820,"line_start":42,"line_end":42,"column_start":39,"column_end":45},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":5,"index":5476},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,100,101,115,99,114,105,112,116,111,114,115,47,101,120,99,101,112,116,105,111,110,95,100,101,115,99,46,114,115],"byte_start":20990,"byte_end":20999,"line_start":48,"line_end":48,"column_start":43,"column_end":52},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":776},"to":{"krate":0,"index":96}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":21572,"byte_end":21581,"line_start":21,"line_end":21,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":8070}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22391,"byte_end":22399,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":22761,"byte_end":22769,"line_start":59,"line_end":59,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":8070}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23463,"byte_end":23476,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,105,103,110,97,116,117,114,101,46,114,115],"byte_start":23933,"byte_end":23946,"line_start":94,"line_end":94,"column_start":30,"column_end":43},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":8070}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":29008,"byte_end":29014,"line_start":27,"line_end":27,"column_start":31,"column_end":37},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":10,"index":140},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":29097,"byte_end":29103,"line_start":33,"line_end":33,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33655,"byte_end":33661,"line_start":172,"line_end":172,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33782,"byte_end":33788,"line_start":179,"line_end":179,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":33913,"byte_end":33919,"line_start":186,"line_end":186,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34035,"byte_end":34041,"line_start":193,"line_end":193,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34159,"byte_end":34165,"line_start":200,"line_end":200,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34285,"byte_end":34291,"line_start":207,"line_end":207,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34407,"byte_end":34413,"line_start":214,"line_end":214,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34525,"byte_end":34531,"line_start":221,"line_end":221,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34645,"byte_end":34651,"line_start":228,"line_end":228,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,118,97,108,117,101,46,114,115],"byte_start":34762,"byte_end":34768,"line_start":235,"line_end":235,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35373,"byte_end":35382,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,101,116,104,111,100,105,100,46,114,115],"byte_start":35541,"byte_end":35550,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36305,"byte_end":36320,"line_start":19,"line_end":19,"column_start":30,"column_end":45},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,109,101,116,104,111,100,105,100,46,114,115],"byte_start":36485,"byte_end":36500,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37148,"byte_end":37156,"line_start":17,"line_end":17,"column_start":29,"column_end":37},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,102,105,101,108,100,105,100,46,114,115],"byte_start":37313,"byte_end":37321,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":37986,"byte_end":38000,"line_start":17,"line_end":17,"column_start":29,"column_end":43},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,97,116,105,99,102,105,101,108,100,105,100,46,114,115],"byte_start":38163,"byte_end":38177,"line_start":26,"line_end":26,"column_start":10,"column_end":24},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":38929,"byte_end":38936,"line_start":20,"line_end":20,"column_start":28,"column_end":35},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39113,"byte_end":39120,"line_start":29,"line_end":29,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,111,98,106,101,99,116,46,114,115],"byte_start":39235,"byte_end":39242,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39732,"byte_end":39742,"line_start":13,"line_end":13,"column_start":31,"column_end":41},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":470},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":39879,"byte_end":39889,"line_start":19,"line_end":19,"column_start":32,"column_end":42},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":470},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":40026,"byte_end":40033,"line_start":27,"line_end":27,"column_start":35,"column_end":42},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,116,104,114,111,119,97,98,108,101,46,114,115],"byte_start":40140,"byte_end":40150,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":470},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40517,"byte_end":40523,"line_start":14,"line_end":14,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40652,"byte_end":40658,"line_start":20,"line_end":20,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40791,"byte_end":40798,"line_start":28,"line_end":28,"column_start":31,"column_end":38},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,99,108,97,115,115,46,114,115],"byte_start":40980,"byte_end":40986,"line_start":35,"line_end":35,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41342,"byte_end":41349,"line_start":14,"line_end":14,"column_start":28,"column_end":35},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41480,"byte_end":41487,"line_start":20,"line_end":20,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41621,"byte_end":41628,"line_start":28,"line_end":28,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,115,116,114,105,110,103,46,114,115],"byte_start":41732,"byte_end":41739,"line_start":34,"line_end":34,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42435,"byte_end":42439,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":568},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42577,"byte_end":42584,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":42670,"byte_end":42674,"line_start":40,"line_end":40,"column_start":10,"column_end":14},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":47524,"byte_end":47532,"line_start":192,"line_end":192,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,109,97,112,46,114,115],"byte_start":48817,"byte_end":48825,"line_start":241,"line_end":241,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3890}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49652,"byte_end":49657,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":622},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49796,"byte_end":49803,"line_start":36,"line_end":36,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":49890,"byte_end":49895,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,108,105,115,116,46,114,115],"byte_start":54567,"byte_end":54576,"line_start":199,"line_end":199,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":652},"to":{"krate":2,"index":3890}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55302,"byte_end":55313,"line_start":11,"line_end":11,"column_start":28,"column_end":39},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55437,"byte_end":55448,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55586,"byte_end":55593,"line_start":25,"line_end":25,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,106,98,121,116,101,98,117,102,102,101,114,46,114,115],"byte_start":55701,"byte_end":55712,"line_start":31,"line_end":31,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57057,"byte_end":57066,"line_start":40,"line_end":40,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":1674}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57105,"byte_end":57112,"line_start":43,"line_end":43,"column_start":34,"column_end":41},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57208,"byte_end":57217,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":57748,"byte_end":57762,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,103,108,111,98,97,108,95,114,101,102,46,114,115],"byte_start":58286,"byte_end":58300,"line_start":88,"line_end":88,"column_start":15,"column_end":29},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":704},"to":{"krate":2,"index":1946}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":59945,"byte_end":59954,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,111,98,106,101,99,116,115,47,97,117,116,111,95,108,111,99,97,108,46,114,115],"byte_start":61049,"byte_end":61058,"line_start":60,"line_end":60,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":740},"to":{"krate":2,"index":1946}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":61973,"byte_end":61982,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":776},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62163,"byte_end":62169,"line_start":35,"line_end":35,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":778},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62293,"byte_end":62302,"line_start":43,"line_end":43,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":776},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62565,"byte_end":62568,"line_start":55,"line_end":55,"column_start":31,"column_end":34},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":5,"index":3430},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":62929,"byte_end":62935,"line_start":68,"line_end":68,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":5,"index":5476},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63043,"byte_end":63052,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63216,"byte_end":63222,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63499,"byte_end":63508,"line_start":92,"line_end":92,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":776},"to":{"krate":2,"index":2670}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,102,102,105,95,115,116,114,46,114,115],"byte_start":63584,"byte_end":63590,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":778},"to":{"krate":5,"index":3414}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64291,"byte_end":64298,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":64960,"byte_end":64967,"line_start":43,"line_end":43,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":838},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65260,"byte_end":65263,"line_start":56,"line_end":56,"column_start":36,"column_end":39},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":5,"index":3430},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65428,"byte_end":65434,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":5,"index":5476},"to":{"krate":2,"index":2608}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,115,116,114,105,110,103,115,47,106,97,118,97,95,115,116,114,46,114,115],"byte_start":65574,"byte_end":65581,"line_start":70,"line_end":70,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":838},"to":{"krate":2,"index":1946}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":67974,"byte_end":67980,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,110,105,101,110,118,46,114,115],"byte_start":127024,"byte_end":127036,"line_start":1826,"line_end":1826,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1946}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127677,"byte_end":127683,"line_start":15,"line_end":15,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":1674}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127708,"byte_end":127714,"line_start":16,"line_end":16,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":1686}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":127724,"byte_end":127730,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130595,"byte_end":130606,"line_start":107,"line_end":107,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130794,"byte_end":130805,"line_start":117,"line_end":117,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":1198},"to":{"krate":2,"index":1918}},{"span":{"file_name":[47,104,111,109,101,47,121,111,103,97,48,55,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,106,110,105,45,48,46,49,48,46,50,47,115,114,99,47,119,114,97,112,112,101,114,47,106,97,118,97,95,118,109,47,118,109,46,114,115],"byte_start":130927,"byte_end":130938,"line_start":125,"line_end":125,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":1198},"to":{"krate":2,"index":1946}}]}